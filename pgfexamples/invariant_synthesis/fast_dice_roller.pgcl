nat v;
nat c;
bool flag;
// nparam n;

v := 1
c := 0
flag := 0
while (flag = 0) {
   v := 2 * v;
   {c := 2*c} [1/2] {c := 2*c + 1};
   if (6 <= v){
     if (c < 6){
        flag := 1
     } else {
      v := v - 6;
      c := c - 6;
     }
   } else {skip}
}

flag := 0
v := 0
!Plot[c, \infty]

// Invariant template seems to be: a*v^4*flag*(1+c+c^2)+b*v^2*(1+c)+d*v with solution: [{a: 1/3, b: 2/3, d: 4/3}]

//a*v^4*flag*(1+c+c^2+c^3)+b*v^2*(1+c)+d*v


// w_m * v^5 * (1+c+c^2+c^3+c^4) + w_0 * v^4 * (1+c+c^2+c^3) + w_1 * v^3 * (1 + c + c^2) + w_2 * v^2 * (1 + c) + w_3 * v + w_4 * flag * v^8 * (1+c+c^2+c^3+c^4+c^5) + w_5 * flag * v^6 * (1+c+c^2+c^3+c^4+c^5) + w_6 * flag * v^7 * (1+c+c^2+c^3+c^4+c^5)

// sum_{i = 0}^{n-1} (w_i * v^i * (sum_{j = 0}^{i-1} (c^j) )) +  sum_{i = n}^{2^{\ceil{\log_2(n)}}} (flag * w_i * v^i * (sum_{j = 0}^{n-1} (c^j) ))

// Wolfram Query:  Sum[f * w_i * v^i * (Sum[c^j, {j,0,n-1}]),{i, n, 2^log(n)}] + Sum[w_i * v^i * (Sum[c^j, {j,0,i-1}]),{i,0,n-1}]